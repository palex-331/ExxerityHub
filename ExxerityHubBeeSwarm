--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v83=v2(v0(v30,16));if v19 then local v89=0;local v90;while true do if (v89==1) then return v90;end if (v89==0) then v90=v5(v83,v19);v19=nil;v89=1;end end else return v83;end end end);local function v20(v31,v32,v33) if v33 then local v84=(v31/((5 -3)^(v32-1)))%((5 -3)^(((v33-1) -(v32-((1 + 0) -0))) + (2 -1))) ;return v84-(v84%(620 -(555 + 64))) ;else local v85=((1810 -(282 + 595)) -(857 + 74))^(v32-(569 -(367 + 201))) ;return (((v31%(v85 + v85))>=v85) and (928 -(214 + 713))) or ((1637 -(1523 + 114)) + 0) ;end end local function v21() local v34=0 + 0 ;local v35;while true do if (v34==(0 -0)) then v35=v1(v16,v18,v18);v18=v18 + (1066 -(68 + 997)) ;v34=1271 -(226 + (4545 -3501)) ;end if (v34==1) then return v35;end end end local function v22() local v36=117 -(32 + 85) ;local v37;local v38;while true do if ((1 + 0)==v36) then return (v38 * (57 + 199)) + v37 ;end if (v36==(957 -((1637 -745) + 65))) then v37,v38=v1(v16,v18,v18 + 2 );v18=v18 + (4 -2) ;v36=1 -0 ;end end end local function v23() local v39,v40,v41,v42=v1(v16,v18,v18 + (353 -(87 + 263)) );v18=v18 + (9 -5) ;return (v42 * 16777216) + (v41 * (65716 -(67 + 113))) + (v40 * (188 + 68)) + v39 ;end local function v24() local v43=0 + 0 ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(3 -2)) then v46=1 -0 ;v47=(v20(v45,953 -(802 + 150) ,450 -(44 + 386) ) * ((5 -(769 -(745 + 21)))^(11 + 8 + 13))) + v44 ;v43=2 + (0 -0) ;end if (v43==(0 -0)) then v44=v23();v45=v23();v43=1 + 0 ;end if (v43==((46 -34) -9)) then if (v48==(997 -(915 + 82))) then if (v47==(0 -0)) then return v49 * (0 -0) ;else local v100=0 + 0 ;while true do if (v100==((0 + 0) -(0 + 0))) then v48=1188 -(1069 + 118) ;v46=0 -0 ;break;end end end elseif (v48==(4477 -2430)) then return ((v47==(0 + 0)) and (v49 * (((1056 -(87 + 968)) + (0 -0))/(885 -(261 + 624))))) or (v49 * NaN) ;end return v8(v49,v48-1023 ) * (v46 + (v47/((3 -1)^(52 + 0)))) ;end if (v43==(793 -(368 + 423))) then v48=v20(v45,65 -44 ,49 -(10 + 8) );v49=((v20(v45,122 -90 )==(443 -(416 + 24 + 2))) and  -(3 -2)) or (3 -2) ;v43=2 + (2 -1) ;end end end local function v25(v50) local v51=(1789 -(85 + 291)) -(447 + 966) ;local v52;local v53;while true do if (((1270 -(243 + 1022)) -3)==v51) then v53={};for v91=1, #v52 do v53[v91]=v2(v1(v3(v52,v91,v91)));end v51=1820 -((6480 -4777) + 114) ;end if ((704 -(376 + 325))==v51) then return v6(v53);end if (v51==(1 -0)) then v52=v3(v16,v18,(v18 + v50) -(2 -1) );v18=v18 + v50 ;v51=2;end if (v51==(0 + 0 + 0)) then v52=nil;if  not v50 then v50=v23();if (v50==(0 -0)) then return "";end end v51=15 -(9 + 5) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v54=(function() return 0 + 0 ;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();local v60=(function() return;end)();local v61=(function() return;end)();while true do local v68=(function() return 0;end)();while true do if ((65 -(30 + 35))==v68) then if ((2 + 0)==v54) then local v97=(function() return 0 + 0 ;end)();local v98=(function() return;end)();while true do if (v97==(0 -0)) then v98=(function() return 1985 -(1266 + 719) ;end)();while true do if (v98==(604 -(268 + 335))) then v59[ #"91("]=(function() return v21();end)();v54=(function() return 3;end)();break;end if (v98~=(580 -(361 + 219))) then else v61=(function() return {};end)();for v124= #".",v60 do local v125=(function() return 290 -(60 + 230) ;end)();local v126=(function() return;end)();local v127=(function() return;end)();while true do if (v125==(572 -(426 + 146))) then local v210=(function() return 0 + 0 ;end)();local v211=(function() return;end)();while true do if (v210==(1456 -(282 + 1174))) then v211=(function() return 811 -(569 + 242) ;end)();while true do if (v211~=1) then else v125=(function() return 414 -(15 + 398) ;end)();break;end if (v211==0) then v126=(function() return v21();end)();v127=(function() return nil;end)();v211=(function() return 2 -1 ;end)();end end break;end end end if (v125~=(1 + 0)) then else if (v126== #".") then v127=(function() return v21()~=(1024 -(706 + 318)) ;end)();elseif (v126==(1253 -(721 + 530))) then v127=(function() return v24();end)();elseif (v126== #"nil") then v127=(function() return v25();end)();end v61[v124]=(function() return v127;end)();break;end end end v98=(function() return 983 -(18 + 964) ;end)();end end break;end end end if (v54~=3) then else for v101= #"/",v23() do local v102=(function() return v21();end)();if (v20(v102, #"|", #"|")~=(1271 -(945 + 326))) then else local v108=(function() return 0 -0 ;end)();local v109=(function() return;end)();local v110=(function() return;end)();local v111=(function() return;end)();local v112=(function() return;end)();while true do if ((0 + 0)==v108) then v109=(function() return 700 -(271 + 429) ;end)();v110=(function() return nil;end)();v108=(function() return 1;end)();end if ((1 + 0)==v108) then local v115=(function() return 1500 -(1408 + 92) ;end)();while true do if ((127 -(116 + 10))~=v115) then else v108=(function() return 1 + 1 ;end)();break;end if (v115==0) then v111=(function() return nil;end)();v112=(function() return nil;end)();v115=(function() return 1;end)();end end end if (v108==(1088 -(461 + 625))) then while true do if ( #"\\"==v109) then local v195=(function() return 1288 -(993 + 295) ;end)();local v196=(function() return;end)();while true do if (v195~=(0 + 0)) then else v196=(function() return 0;end)();while true do if (v196~=(1171 -(418 + 753))) then else v112=(function() return {v22(),v22(),nil,nil};end)();if (v110==(0 + 0)) then local v238=(function() return 0 + 0 ;end)();local v239=(function() return;end)();while true do if (v238==(0 + 0)) then v239=(function() return 0;end)();while true do if (v239==0) then v112[ #"xxx"]=(function() return v22();end)();v112[ #"xnxx"]=(function() return v22();end)();break;end end break;end end elseif (v110== #"}") then v112[ #"19("]=(function() return v23();end)();elseif (v110==(1 + 1)) then v112[ #"91("]=(function() return v23() -((531 -(406 + 123))^(1785 -(1749 + 20))) ;end)();elseif (v110~= #"nil") then else local v246=(function() return 0 + 0 ;end)();local v247=(function() return;end)();while true do if (v246~=(1322 -(1249 + 73))) then else v247=(function() return 0 + 0 ;end)();while true do if ((1145 -(466 + 679))==v247) then v112[ #"asd"]=(function() return v23() -((1553 -(1126 + 425))^(38 -22)) ;end)();v112[ #"0836"]=(function() return v22();end)();break;end end break;end end end v196=(function() return 2 -1 ;end)();end if (v196~=1) then else v109=(function() return 2;end)();break;end end break;end end end if (v109~=(1902 -(106 + 1794))) then else local v197=(function() return 0 + 0 ;end)();local v198=(function() return;end)();while true do if (v197==(0 -0)) then v198=(function() return 377 -(142 + 235) ;end)();while true do if (v198==(0 -0)) then if (v20(v111, #"|", #":")~= #"<") then else v112[2]=(function() return v61[v112[1 + 1 ]];end)();end if (v20(v111,2,2)== #"/") then v112[ #"xnx"]=(function() return v61[v112[ #"nil"]];end)();end v198=(function() return 1 + 0 ;end)();end if (v198~=(2 -1)) then else v109=(function() return  #"nil";end)();break;end end break;end end end if (v109~=0) then else local v199=(function() return 977 -(553 + 424) ;end)();local v200=(function() return;end)();while true do if (v199==0) then v200=(function() return 0 -0 ;end)();while true do if (v200~=0) then else v110=(function() return v20(v102,2 + 0 , #"91(");end)();v111=(function() return v20(v102, #"0313",6 + 0 );end)();v200=(function() return 115 -(4 + 110) ;end)();end if (v200==(585 -(57 + 527))) then v109=(function() return  #":";end)();break;end end break;end end end if (v109== #"xxx") then if (v20(v111, #"gha", #"gha")~= #"}") then else v112[ #"0836"]=(function() return v61[v112[ #".com"]];end)();end v56[v101]=(function() return v112;end)();break;end end break;end end end end for v103= #" ",v23() do v57,v103,v28=(function() return v55(v57,v103,v28);end)();end return v59;end v68=(function() return 1;end)();end if (v68==(1428 -(41 + 1386))) then if (v54==(103 -(17 + 86))) then v55=(function() return function(v104,v105,v106) local v107=(function() return 0 + 0 ;end)();while true do if (v107==(0 -0)) then local v113=(function() return 0 -0 ;end)();while true do if (0==v113) then local v130=(function() return 166 -(122 + 44) ;end)();while true do if (v130==0) then v104[v105-#"." ]=(function() return v106();end)();return v104,v105,v106;end end end end end end end;end)();v56=(function() return {};end)();v57=(function() return {};end)();v54=(function() return 1 -0 ;end)();end if (v54==(3 -2)) then local v99=(function() return 0;end)();while true do if (v99==(1 + 0)) then v60=(function() return v23();end)();v54=(function() return 1 + 1 ;end)();break;end if (v99==0) then v58=(function() return {};end)();v59=(function() return {v56,v57,nil,v58};end)();v99=(function() return 1 -0 ;end)();end end end break;end end end end local function v29(v62,v63,v64) local v65=v62[1 + 0 ];local v66=v62[1 + 1 + 0 ];local v67=v62[(20 -14) -(2 + 1) ];return function(...) local v69=v65;local v70=v66;local v71=v67;local v72=v27;local v73=1203 -((843 -(381 + 89)) + 829) ;local v74= -(732 -(476 + 255));local v75={};local v76={...};local v77=v12("#",...) -1 ;local v78={};local v79={};for v86=0,v77 do if (v86>=v71) then v75[v86-v71 ]=v76[v86 + 1 + 0 ];else v79[v86]=v76[v86 + 1 ];end end local v80=(v77-v71) + 1 ;local v81;local v82;while true do v81=v69[v73];v82=v81[1];if (v82<=(45 -20)) then if (v82<=(22 -10)) then if ((v82<=(243 -(64 + 174))) or (3174<2587)) then if (v82<=(1 + 1)) then if ((v82<=(0 -0)) or (4120<=2198)) then if ((v81[338 -(144 + 192) ]==v79[v81[220 -(29 + 13 + 174) ]]) or (1596==858)) then v73=v73 + 1 + 0 ;else v73=v81[3 + 0 ];end elseif ((3220==3220) and (v82>(1 + 0))) then if ((v79[v81[2]]<v81[1508 -(363 + 1141) ]) or (1402>3620)) then v73=v73 + (1581 -(1183 + 397)) ;else v73=v81[3];end else local v132=0;local v133;local v134;local v135;while true do if (v132==0) then v133=v81[5 -3 ];v134={v79[v133](v79[v133 + 1 + 0 ])};v132=1976 -(1913 + 62) ;end if (v132==(1 + 0)) then v135=0;for v231=v133,v81[10 -(1162 -(1074 + 82)) ] do local v232=1933 -(565 + 1368) ;while true do if (v232==0) then v135=v135 + 1 ;v79[v231]=v134[v135];break;end end end break;end end end elseif ((2574==2574) and (v82<=(11 -(17 -9)))) then if v79[v81[1663 -(1477 + 184) ]] then v73=v73 + (1 -0) ;else v73=v81[3];end elseif (v82>(4 + (1784 -(214 + 1570)))) then local v137=v81[2];v79[v137](v13(v79,v137 + (857 -(564 + (1747 -(990 + 465)))) ,v81[4 -(1 + 0) ]));else for v202=v81[2],v81[8 -5 ] do v79[v202]=nil;end end elseif (v82<=((136 + 176) -(244 + 60))) then if ((1798<2757) and (v82<=(5 + 1))) then if (v79[v81[478 -(40 + 1 + 435) ]]==v81[(3955 -2950) -(938 + 63) ]) then v73=v73 + 1 + 0 ;else v73=v81[1128 -(936 + 189) ];end elseif (v82==7) then local v139=v81[1 + 1 ];v79[v139]=v79[v139](v13(v79,v139 + (1614 -((3291 -(1668 + 58)) + 48)) ,v74));elseif ((v79[v81[2]]==v81[3 + 1 ]) or (377>2604)) then v73=v73 + ((1765 -(512 + 114)) -(782 + (928 -572))) ;else v73=v81[3];end elseif (v82<=(277 -(176 + 91))) then if ((568<911) and (v82>(23 -14))) then local v141=v81[2 -0 ];v79[v141](v79[v141 + 1 ]);else v79[v81[1094 -(975 + 117) ]]=v79[v81[(3882 -2004) -(157 + 1718) ]] + v81[4 + 0 ] ;end elseif (v82>(38 -27)) then if (v81[6 -(13 -9) ]<v79[v81[(476 + 546) -(697 + 61 + 260) ]]) then v73=v73 + 1 ;else v73=v81[3];end elseif v79[v81[5 -3 ]] then v73=v73 + 1 ;else v73=v81[5 -2 ];end elseif ((3285<4228) and (v82<=((36 + 5) -23))) then if (v82<=(6 + 9)) then if (v82<=(23 -10)) then local v116=v81[(16 -11) -3 ];v79[v116]=v79[v116](v79[v116 + 1 ]);elseif ((3916>3328) and (v82==(1241 -(322 + 905)))) then if  not v79[v81[613 -(602 + 9) ]] then v73=v73 + 1 ;else v73=v81[(3186 -(109 + 1885)) -(449 + 740) ];end else v79[v81[874 -(826 + 46) ]]();end elseif ((2500<3839) and (v82<=(963 -(245 + 702)))) then local v118=v81[2];v79[v118]=v79[v118](v13(v79,v118 + 1 ,v81[9 -6 ]));elseif (v82>17) then v79[v81[2]]=v29(v70[v81[1 + 2 ]],nil,v64);else local v144=v81[1900 -(260 + 1638) ];v79[v144](v13(v79,v144 + (441 -(382 + 58)) ,v81[9 -6 ]));end elseif (v82<=(18 + 3)) then if ((507==507) and (v82<=(38 -19))) then if  not v79[v81[5 -3 ]] then v73=v73 + (1206 -(902 + 303)) ;else v73=v81[3];end elseif (v82>(43 -23)) then v79[v81[4 -2 ]]=v29(v70[v81[(1470 -(1269 + 200)) + 2 ]],nil,v64);elseif ((240<=3165) and (v81[1692 -(1121 + (1090 -521)) ]==v79[v81[218 -(22 + 192) ]])) then v73=v73 + 1 ;else v73=v81[686 -(483 + (1015 -(98 + 717))) ];end elseif (v82<=(1486 -(1404 + 59))) then if (v82==(60 -38)) then v79[v81[2 -0 ]]=v79[v81[768 -(468 + (1123 -(802 + 24))) ]] + v81[566 -(334 + (393 -165)) ] ;else local v148=v81[2];local v149,v150=v72(v79[v148](v13(v79,v148 + (3 -2) ,v81[6 -3 ])));v74=(v150 + v148) -(1 -0) ;local v151=0 + 0 ;for v204=v148,v74 do v151=v151 + 1 ;v79[v204]=v149[v151];end end elseif (v82==(260 -(141 + 95))) then v79[v81[2 + 0 ]]=v81[7 -4 ];elseif (v81[4 -2 ]<v79[v81[1 + 3 ]]) then v73=v73 + (2 -1) ;else v73=v81[3 + (0 -0) ];end elseif (v82<=(20 + 18)) then if (v82<=31) then if (v82<=(39 -11)) then if (v82<=(16 + 10)) then if (v81[165 -(92 + 71) ]<=v79[v81[1 + 1 + 2 ]]) then v73=v73 + 1 ;else v73=v81[4 -1 ];end elseif ((834>=805) and (v82>(792 -(574 + 147 + 44)))) then local v155=0;local v156;while true do if ((v155==(0 + 0)) or (3812<2316)) then v156=v81[4 -2 ];v79[v156]=v79[v156](v13(v79,v156 + 1 + 0 ,v81[852 -(254 + 98 + 497) ]));break;end end else v79[v81[128 -(55 + 16 + 55) ]]=v64[v81[3 -0 ]];end elseif (v82<=29) then for v128=v81[1792 -(573 + 1217) ],v81[(22 -14) -5 ] do v79[v128]=nil;end elseif (v82==(3 + 27)) then local v159=v81[2 -(0 -0) ];local v160={v79[v159](v79[v159 + (2 -1) ])};local v161=0 -(0 + 0) ;for v207=v159,v81[1 + 3 ] do v161=v161 + (1 -0) ;v79[v207]=v160[v161];end else local v162=(329 + 477) -(118 + 688) ;local v163;while true do if (v162==(48 -(21 + 4 + 23))) then v163=v81[1 + 1 + 0 ];v79[v163](v79[v163 + 1 ]);break;end end end elseif ((v82<=(1920 -(927 + 959))) or (2652<=1533)) then if (v82<=((50 + 57) -75)) then do return;end elseif (v82==(765 -((1449 -(797 + 636)) + (3476 -2760)))) then v79[v81[3 -1 ]]=v79[v81[100 -(11 + 86) ]];else local v166=v81[4 -2 ];v79[v166]=v79[v166](v79[v166 + (286 -(175 + 110)) ]);end elseif ((v82<=(90 -54)) or (3598<1460)) then if (v82==(172 -137)) then local v168=1796 -(503 + 1293) ;local v169;while true do if (v168==(0 -0)) then v169=v81[(1621 -(1427 + 192)) + 0 ];v79[v169]=v79[v169](v13(v79,v169 + (1062 -(810 + 251)) ,v74));break;end end else local v170=0 + 0 ;local v171;local v172;local v173;local v174;while true do if (v170==(1 + 0)) then v74=(v173 + v171) -(1 + 0) ;v174=533 -(43 + 490) ;v170=735 -(711 + 22) ;end if ((v170==(1 + 1)) or (4116<1192)) then for v233=v171,v74 do v174=v174 + (3 -2) ;v79[v233]=v172[v174];end break;end if (v170==(859 -(240 + 619))) then v171=v81[(2 -1) + 1 ];v172,v173=v72(v79[v171](v13(v79,v171 + ((1 + 0) -0) ,v81[1 + 2 ])));v170=1745 -(1344 + 400) ;end end end elseif (v82==(17 + 20)) then v73=v81[408 -(255 + 150) ];else v73=v81[3 + 0 ];end elseif (v82<=(24 + 20)) then if (v82<=(175 -134)) then if ((v82<=(125 -(412 -(192 + 134)))) or (3377<=903)) then v79[v81[1741 -((1680 -(316 + 960)) + 1335) ]]=v81[3];elseif (v82>(446 -(183 + 223))) then v79[v81[2 -0 ]]=v79[v81[2 + 1 ]] -v81[2 + 2 ] ;else v79[v81[(189 + 150) -(10 + 327) ]]=v79[v81[3]] -v81[4] ;end elseif (v82<=(30 + 12)) then v79[v81[2]]=v79[v81[341 -(118 + 220) ]];elseif (v82==(15 + 28)) then v79[v81[451 -(108 + 341) ]]=v79[v81[2 + 1 ]][v81[16 -(10 + 2) ]];else local v181=v81[(1382 + 113) -((2718 -2007) + 782) ];local v182=v79[v81[5 -2 ]];v79[v181 + (470 -(270 + (750 -(83 + 468)))) ]=v182;v79[v181]=v182[v81[2 + 2 ]];end elseif (v82<=(1866 -(580 + 1239))) then if (v82<=(133 -(1894 -(1202 + 604)))) then v79[v81[2 + 0 ]]();elseif ((3976>=439) and (v82==(2 + 44))) then v79[v81[1 + 1 ]]=v64[v81[7 -4 ]];else do return;end end elseif ((3752==3752) and (v82<=(31 + 18))) then if ((4046>2695) and (v82>(1215 -(645 + (2436 -1914))))) then if ((v81[1792 -(1010 + 780) ]<=v79[v81[4]]) or (3545==3197)) then v73=v73 + 1 + 0 ;else v73=v81[14 -(18 -7) ];end else local v188=v81[5 -3 ];local v189=v79[v81[1839 -(1045 + 791) ]];v79[v188 + (2 -1) ]=v189;v79[v188]=v189[v81[5 -1 ]];end elseif ((2394>373) and (v82>50)) then if (v79[v81[(1403 -896) -(351 + 154) ]]<v81[4]) then v73=v73 + (1575 -(1281 + 293)) ;else v73=v81[(594 -(45 + 280)) -(28 + 238) ];end else v79[v81[4 -2 ]]=v79[v81[1562 -(1381 + 178) ]][v81[4 + 0 ]];end v73=v73 + 1 + 0 + 0 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
